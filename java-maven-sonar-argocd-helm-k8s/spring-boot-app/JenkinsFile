pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout'){
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "https://0d91-122-172-131-2.ngrok-free.app"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        AWS_REGION = 'us-east-1'
        ECR_REPO = '365657944743.dkr.ecr.us-east-1.amazonaws.com/ultimateci-cd:${IMAGE_TAG}'
        IMAGE_TAG = "${BUILD_NUMBER}"
      }
      steps {
       withAWS(credentials: 'AKIAVKIXJOKTQICW2Y5V', region: "${AWS_REGION}") {
            script {
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${ECR_REPO}'
                sh 'docker build -t ${ECR_REPO}:${IMAGE_TAG} .'
                sh 'docker push ${ECR_REPO}:${IMAGE_TAG}'
      }
    }
}
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "sudipta1"
        }
        steps {
            withCredentials([string(credentialsId: 'sudipta1', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "sudipta.nayak244@gmail.com"
                    git config user.name "Sudipta Nayak"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/4/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }

  post {
    success {
      slackSend channel: '#all-owner-devops', message: "‚úÖ Build #${BUILD_NUMBER} succeeded! üéâ"
    }
    failure {
      slackSend channel: '#all-owner-devops', message: "‚ùå Build #${BUILD_NUMBER} failed! Check Jenkins logs. üîç"
    }
    always {
      slackSend channel: '#all-owner-devops', message: "üì¢ Build #${BUILD_NUMBER} completed."
    }
  }
}
